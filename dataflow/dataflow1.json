{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SalesCustomer",
						"type": "DatasetReference"
					},
					"name": "SalesCustomer"
				},
				{
					"dataset": {
						"referenceName": "SalesCustomerAddress",
						"type": "DatasetReference"
					},
					"name": "SalesCustomerAddress"
				},
				{
					"dataset": {
						"referenceName": "SalesOrderHeader",
						"type": "DatasetReference"
					},
					"name": "SalesOrderHeader"
				},
				{
					"dataset": {
						"referenceName": "SalesOrderDetail",
						"type": "DatasetReference"
					},
					"name": "SalesOrderDetail"
				},
				{
					"dataset": {
						"referenceName": "SalesProduct",
						"type": "DatasetReference"
					},
					"name": "SalesProduct"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "FullCustomer"
				},
				{
					"name": "FCustomerOrderHeader"
				},
				{
					"name": "FCustomerFullOrder"
				},
				{
					"name": "FCFOProduct"
				},
				{
					"name": "split1"
				},
				{
					"name": "DueDateisShipDate"
				},
				{
					"name": "exists2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as integer,",
				"          NameStyle as boolean,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          PasswordHash as string,",
				"          PasswordSalt as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesCustomer",
				"source(output(",
				"          CustomerID as integer,",
				"          AddressID as integer,",
				"          AddressType as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesCustomerAddress",
				"source(output(",
				"          SalesOrderID as integer,",
				"          RevisionNumber as integer,",
				"          OrderDate as timestamp,",
				"          DueDate as timestamp,",
				"          ShipDate as timestamp,",
				"          Status as integer,",
				"          OnlineOrderFlag as boolean,",
				"          SalesOrderNumber as string,",
				"          PurchaseOrderNumber as string,",
				"          AccountNumber as string,",
				"          CustomerID as integer,",
				"          ShipToAddressID as integer,",
				"          BillToAddressID as integer,",
				"          ShipMethod as string,",
				"          CreditCardApprovalCode as string,",
				"          SubTotal as decimal(19,4),",
				"          TaxAmt as decimal(19,4),",
				"          Freight as decimal(19,4),",
				"          TotalDue as decimal(19,4),",
				"          Comment as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesOrderHeader",
				"source(output(",
				"          SalesOrderID as integer,",
				"          SalesOrderDetailID as integer,",
				"          OrderQty as integer,",
				"          ProductID as integer,",
				"          UnitPrice as decimal(19,4),",
				"          UnitPriceDiscount as decimal(19,4),",
				"          LineTotal as decimal(38,6),",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesOrderDetail",
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as decimal(19,4),",
				"          ListPrice as decimal(19,4),",
				"          Size as string,",
				"          Weight as decimal(8,2),",
				"          ProductCategoryID as integer,",
				"          ProductModelID as integer,",
				"          SellStartDate as timestamp,",
				"          SellEndDate as timestamp,",
				"          DiscontinuedDate as timestamp,",
				"          ThumbNailPhoto as binary,",
				"          ThumbnailPhotoFileName as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesProduct",
				"SalesCustomer, SalesCustomerAddress join(SalesCustomer@CustomerID == SalesCustomerAddress@CustomerID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> FullCustomer",
				"FullCustomer, SalesOrderHeader join(SalesCustomer@CustomerID == SalesOrderHeader@CustomerID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> FCustomerOrderHeader",
				"FCustomerOrderHeader, SalesOrderDetail join(SalesOrderHeader@SalesOrderID == SalesOrderDetail@SalesOrderID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> FCustomerFullOrder",
				"FCustomerFullOrder, SalesProduct join(SalesOrderDetail@ProductID == SalesProduct@ProductID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> FCFOProduct",
				"FCFOProduct split(DueDate==ShipDate,",
				"     disjoint: false) ~> split1@(DueDateisShipDate, DueDateisnotShipDate)",
				"split1@DueDateisShipDate, FCFOProduct exists(split1@DueDateisShipDate@CustomerID == SalesCustomerAddress@CustomerID,",
				"     negate:false,",
				"     broadcast: 'auto')~> DueDateisShipDate",
				"split1@DueDateisnotShipDate, FCFOProduct exists(split1@DueDateisnotShipDate@CustomerID == SalesCustomerAddress@CustomerID,",
				"     negate:false,",
				"     broadcast: 'auto')~> exists2"
			]
		}
	}
}